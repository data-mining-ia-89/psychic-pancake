version: "3.8"

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    environment:
      - CLUSTER_NAME=hadoop-cluster2
    ports:
      - "9870:9870"   # Interface web HDFS
      - "9000:9000"   # Port RPC HDFS
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    networks:
      - hadoop-net

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    restart: always
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    networks:
      - hadoop-net
    depends_on:
      - namenode

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    restart: always
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    networks:
      - hadoop-net
    depends_on:
      - namenode

  yolo-api:
    build:
      context: ./yolo-api  # Assurez-vous que le Dockerfile est dans ce dossier
      dockerfile: Dockerfile
    container_name: yolo-api
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./datasets/images:/app/images  # Monte le dossier images dans le conteneur
    networks:
      - hadoop-net
    depends_on:
      - namenode


volumes:
  hadoop_namenode:
  hadoop_datanode1:
  hadoop_datanode2:

networks:
  hadoop-net:
    driver: bridge
