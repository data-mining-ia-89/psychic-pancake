version: "3.8"

services:
  namenode:
    build:
      context: ./hadoop-namenode
    container_name: namenode
    hostname: namenode
    ports:
      - "9870:9870"   # Web UI HDFS
      - "9000:9000"   # RPC Hadoop
      - "2222:22"     # SSH
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    networks:
      - hadoop-net
    restart: always

  datanode1:
    build:
      context: ./hadoop-datanode
    container_name: datanode1
    hostname: datanode1
    ports:
      - "9864:9864"   # Web UI DataNode
    #  - "50075:50075" # Service DataNode
      - "2223:22"     # SSH
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    networks:
      - hadoop-net
    depends_on:
      - namenode
    restart: always

  datanode2:
    build:
      context: ./hadoop-datanode
    container_name: datanode2
    hostname: datanode2
    ports:
      - "9865:9864"
    #  - "50076:50075"
      - "2224:22"
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    networks:
      - hadoop-net
    depends_on:
      - namenode
    restart: always

  yolo-api:
    build:
      context: ./yolo-api
    container_name: yolo-api
    hostname: yolo-api
    ports:
      - "8000:8000"
    volumes:
      - ./datasets/images:/app/images  # facultatif si tu as des images
    networks:
      - hadoop-net
    depends_on:
      - namenode
  
  data-loader:
    build:
      context: ./data-loader
    container_name: data-loader
    hostname: data-loader
    networks:
      - hadoop-net
    depends_on:
      - namenode
    restart: "no"  # il s'exécute une fois, puis s'arrête

  hbase-master:
    image: harisekhon/hbase
    container_name: hbase-master
    hostname: hbase-master
    ports:
      - "16010:16010"  # Web UI HBase Master
    environment:
      - HBASE_MANAGES_ZK=true
    networks:
      - hadoop-net
    depends_on:
      - namenode


volumes:
  hadoop_namenode:
  hadoop_datanode1:
  hadoop_datanode2:

networks:
  hadoop-net:
    driver: bridge
